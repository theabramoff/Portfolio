variables:
  VERSION: 2.0.${CI_PIPELINE_ID}

include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

    
stages:
  - build
  - release
  - test

build-frontend:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    # variables CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY generated by Gitlab
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd frontend
    - >
      docker build
      --build-arg VERSION=${VERSION}
      --tag $CI_REGISTRY_IMAGE/sausage-frontend-nginx:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE/sausage-frontend-nginx:$CI_COMMIT_SHA

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - >
      sonar-scanner
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_FE}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_FE}
  needs:
    - build-frontend

upload-frontend-latest:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/sausage-frontend-nginx:$CI_COMMIT_SHA
    # tag latest if all OK
    - docker tag $CI_REGISTRY_IMAGE/sausage-frontend-nginx:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/sausage-frontend-nginx:latest
    - docker push $CI_REGISTRY_IMAGE/sausage-frontend-nginx:latest
  needs:
    - sonarqube-frontend-sast