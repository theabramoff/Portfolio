#project version
variables:
   VERSION: 2.0.${CI_PIPELINE_ID}

include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
    
stages:
  - build
  - release
  - deploy

build-backend:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    # vars CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY generated by GitLab
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd backend
    - >
      docker build
      --build-arg VERSION=${VERSION}
      --build-arg PSQL=${PSQL}
      --tag $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA

upload-backend-latest:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA
    # tag latest if all OK
    - docker tag $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/sausage-backend:latest
    - docker push $CI_REGISTRY_IMAGE/sausage-backend:latest

deploy-backend:
  stage: deploy
  image: vault:1.11.3 # was alpine:3.15.0 initially
  before_script:
    - apk add openssh-client bash   #install ssh-agent for ssh auth
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $VM_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./docker-compose.yml $SSH_USER@$VM_IPADDRESS:/home/$SSH_USER/
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=sausage-store jwt=$CI_JOB_JWT)"
    - ssh ${SSH_USER}@${VM_IPADDRESS}
      "export "VERSION=${VERSION}";
       export "SPRING_DATASOURCE_URL=$(vault kv get -version=1 -field=spring.datasource.url secret/sausage-store)";
       export "SPRING_DATASOURCE_USERNAME=$(vault kv get -version=1 -field=spring.datasource.username secret/sausage-store)";
       export "SPRING_DATASOURCE_PASSWORD=$(vault kv get -version=1 -field=spring.datasource.password secret/sausage-store)";
       export "SPRING_DATA_MONGODB_URI=$(vault kv get -version=1 -field=spring.data.mongodb.uri secret/sausage-store)";
      /bin/bash -s " < ./backend/deploy.sh
  when: manual #This setting turns a job into a manual one
  environment: #deploy-backend environment
    name: deploy-backend/$CI_COMMIT_REF_SLUG
    url: http://$VM_IPADDRESS:80